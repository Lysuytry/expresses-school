{"version":3,"sources":["../../src/common/algorithms.js"],"names":["fliterAlgorithms","data","limit","skip","status","name","gender","partternName","nameParttern","fliterProject","fullname","$concat","fullnameReverse","first","last","fliterName","$or","$in","getFullnameRegExp","getReverseRegExp","fliterGender","getGenderRegExp","fliterMatch","$and","$project","$match","$skip","$limit","$count"],"mappings":";;;;;;;;;AAAA;;;;;;AACO,MAAMA,8CAAoBC,IAAD,IAAU;AACxC,QAAM,EAACC,KAAD,EAAQC,IAAR,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,MAA5B,KAAsCL,IAA5C;;AAEA,QAAMM,eAAe,IAAIC,gBAAJ,CAAiBH,IAAjB,EAAuBC,MAAvB,CAArB;AACA;AACA,QAAMG,gBAAgB;AACpBC,cAAU,EAAEC,SAAS,CAAC,QAAD,EAAU,OAAV,CAAX,EADU,EACsBC,iBAAiB,EAAED,SAAS,CAAC,OAAD,EAAS,QAAT,CAAX,EADvC,EACuEE,OAAO,CAD9E,EACiFC,MAAM,CADvF,EAC0FR,QAAQ,CADlG,EACqGF,QAAQ,CAD7G,EAAtB;AAEA;AACA,QAAMW,aAAaV,OAAO,EAACW,KACzB,CAAE,EAACN,UAAU,EAACO,KAAK,CAACV,aAAaW,iBAAb,EAAD,EAAmCX,aAAaY,gBAAb,EAAnC,CAAN,EAAX,EAAF,EACE,EAACP,iBAAiB,EAACK,KAAK,CAACV,aAAaW,iBAAb,EAAD,EAAmCX,aAAaY,gBAAb,EAAnC,CAAN,EAAlB,EADF,CADwB,EAAP,GAEoF,EAFvG;AAGA;AACA,QAAMC,eAAed,SAAS,EAACA,QAAQC,aAAac,eAAb,EAAT,EAAT,GAAoD,EAAzE;;AAEA;AACA,QAAMC,cAAc,EAACC,MAAM,CAAE,EAACnB,MAAD,EAAF,eAAgBW,UAAhB,gBAAiCK,YAAjC,EAAP,EAApB;;AAEA,SAAO,CAAE,CAAC,EAACI,uBAAcf,aAAd,CAAD,EAAD,EAAiC,EAACgB,qBAAYH,WAAZ,CAAD,EAAjC,EAA6D,EAACI,OAAOvB,IAAR,EAA7D,EAA4E,EAACwB,QAAQzB,KAAT,EAA5E,CAAF,EAAgG,CAAC,EAACsB,uBAAcf,aAAd,CAAD,EAAD,EAAiC,EAACgB,qBAAYH,WAAZ,CAAD,EAAjC,EAA6D,EAACM,QAAQ,OAAT,EAA7D,CAAhG,CAAP;AACD,CAlBM","file":"algorithms.js","sourcesContent":["import nameParttern from './search';\nexport const fliterAlgorithms = (data) => {\n  const {limit, skip, status, name, gender} = data;\n\n  const partternName = new nameParttern(name, gender);\n  //projection\n  const fliterProject = {\n    fullname: { $concat: ['$first','$last']}, fullnameReverse: { $concat: ['$last','$first']}, first: 1, last: 1, gender: 1, status: 1};\n  //Fliter name by reverse or normal\n  const fliterName = name ? {$or:\n    [ {fullname: {$in: [partternName.getFullnameRegExp(), partternName.getReverseRegExp()]}},\n      {fullnameReverse: {$in: [partternName.getFullnameRegExp(), partternName.getReverseRegExp()]}} ]} : {} ;\n  //find by gender\n  const fliterGender = gender ? {gender: partternName.getGenderRegExp()} : {};\n\n  //bind conditions of matching\n  const fliterMatch = {$and: [ {status}, {...fliterName}, {...fliterGender} ]};\n\n  return [ [{$project: {...fliterProject}}, {$match: {...fliterMatch}}, {$skip: skip}, {$limit: limit}], [{$project: {...fliterProject}}, {$match: {...fliterMatch}}, {$count: 'total'}] ];\n};\n"]}
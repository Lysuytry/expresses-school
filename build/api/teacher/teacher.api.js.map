{"version":3,"sources":["../../../src/api/teacher/teacher.api.js"],"names":["getTeacherList","req","res","status","limit","skip","query","conditions","teachers","total","Promise","all","Teacher","find","count","success","error","fail","message","getTeacherById","id","params","_id","teacher","findOne","createTeacher","first","last","gender","phone","email","body","data","save","updateTeacher","$set","updateOne","deleteTeacher"],"mappings":"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","file":"teacher.api.js","sourcesContent":["import Teacher from '../../models/teacher';\n\nexport const getTeacherList = async (req, res) => {\n  try{\n    const {status, limit, skip} = req.query;\n    //const fliterMatch = {status};\n    const conditions = { status };\n    const [teachers, total] = await Promise.all([ Teacher.find(conditions).skip(skip).limit(limit), Teacher.count(conditions)]);\n    res.success(teachers, {limit, skip, total});\n  } catch(error){\n    res.fail(error.message);\n  }\n};\n\nexport const getTeacherById = async (req, res) => {\n  try{\n    const { id } = req.params;\n    const conditions = {_id: id, status: 'active'};\n    const teacher = await Teacher.findOne(conditions);\n    teacher ? res.success(teacher) : res.success({});\n  } catch( error ){\n    res.fail(error);\n  }\n};\n\nexport const createTeacher = async (req, res) => {\n  try{\n    const {first, last, gender, phone, email} = req.body;\n    const teacher = new Teacher({ first, last, gender, phone, email});\n    const data = await teacher.save();\n    res.success(data);\n  }catch( error){\n    res.fail(error.message);\n  }\n};\n\nexport const updateTeacher = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const { status = 'active' } = req.query;\n    const data = req.body;\n    const conditions = [{_id: id, status}, {$set: data}];\n    await Teacher.updateOne(...conditions);\n    res.success('Successfully updated.');\n  }catch( error){\n    res.fail(error.message);\n  }\n};\n\nexport const deleteTeacher = async (req, res) => {\n  try{\n    const { id } = req.params;\n    const conditions = [ {_id: id, status: 'active'}, {status: 'inactive'}];\n    await Teacher.updateOne(...conditions);\n    res.success('Deleted successfully.');\n  } catch( error ){\n    res.fail(error.message);\n  }\n};\n"]}
{"version":3,"sources":["../../../src/api/teacher/teacher.api.js"],"names":["getTeacherList","req","res","limit","skip","query","find","count","teachers","total","Promise","all","Teacher","aggregate","amount","success","error","fail","message","getTeacherById","id","params","conditions","_id","status","teacher","findOne","createTeacher","first","last","gender","phone","email","body","data","save","updateTeacher","$set","updateOne","deleteTeacher","fakeCreate","i","fakerTeacher","insertMany"],"mappings":"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","file":"teacher.api.js","sourcesContent":["import Teacher from '../../models/teacher';\nimport { fakerTeacher } from '../../common/dump';\nimport { fliterAlgorithms } from '../../common/algorithms';\n\nexport const getTeacherList = async (req, res) => {\n  try{\n    const {limit, skip} = req.query;\n    const [find, count] = fliterAlgorithms(req.query);\n    //const fliterMatch = {status};\n    const [teachers, total] = await Promise.all([ Teacher.aggregate(find), Teacher.aggregate(count)]);\n    const amount = total[0].total;\n    res.success(teachers, {limit, skip, amount});\n  } catch(error){\n    res.fail(error.message);\n  }\n};\n\nexport const getTeacherById = async (req, res) => {\n  try{\n    const { id } = req.params;\n    const conditions = {_id: id, status: 'active'};\n    const teacher = await Teacher.findOne(conditions);\n    teacher ? res.success(teacher) : res.success({});\n  } catch( error ){\n    res.fail(error);\n  }\n};\n\nexport const createTeacher = async (req, res) => {\n  try{\n    const {first, last, gender, phone, email} = req.body;\n    const teacher = new Teacher({ first, last, gender, phone, email});\n    const data = await teacher.save();\n    res.success(data);\n  }catch( error){\n    res.fail(error.message);\n  }\n};\n\nexport const updateTeacher = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const { status = 'active' } = req.query;\n    const data = req.body;\n    const conditions = [{_id: id, status}, {$set: data}];\n    await Teacher.updateOne(...conditions);\n    res.success('Successfully updated.');\n  }catch( error){\n    res.fail(error.message);\n  }\n};\n\nexport const deleteTeacher = async (req, res) => {\n  try{\n    const { id } = req.params;\n    const conditions = [ {_id: id, status: 'active'}, {status: 'inactive'}];\n    await Teacher.updateOne(...conditions);\n    res.success('Deleted successfully.');\n  } catch( error ){\n    res.fail(error.message);\n  }\n};\n\nexport const fakeCreate = async (req, res) => {\n  try{\n    let teachers = [];\n    for(let i = 0; i < 5; i++){\n      teachers[i] = fakerTeacher;\n    }\n    await Teacher.insertMany(teachers);\n    res.success('ss');\n  }catch(error){\n    res.fail(error);\n  }\n};\n"]}
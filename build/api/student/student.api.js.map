{"version":3,"sources":["../../../src/api/student/student.api.js"],"names":["getStudentList","req","res","students","total","Promise","all","Student","find","count","options","success","error","fail","createStudent","first","last","gender","birthday","email","telephone","subjects","body","student","result","save","getStudentById","id","query","findOne"],"mappings":";;;;;;;AAAA;;;;;;AAEO,MAAMA,0CAAiB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAChD,MAAG;AACD,UAAM,CAACC,QAAD,EAAWC,KAAX,IAAoB,MAAMC,QAAQC,GAAR,CAAY,CAACC,kBAAQC,IAAR,EAAD,EAAiBD,kBAAQE,KAAR,EAAjB,CAAZ,CAAhC;AACA,UAAMC,UAAU,EAACN,KAAD,EAAhB;AACAF,QAAIS,OAAJ,CAAYR,QAAZ,EAAsBO,OAAtB;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACdV,QAAIW,IAAJ,CAASD,KAAT;AACD;AACF,CARM;;AAUA,MAAME,wCAAgB,OAAOb,GAAP,EAAYC,GAAZ,KAAoB;AAC/C,MAAG;AACD;AACA,UAAM,EAACa,KAAD,EAAQC,IAAR,EAAcC,MAAd,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkDC,QAAlD,KAA8DpB,IAAIqB,IAAxE;AACA,UAAMC,UAAU,IAAIhB,iBAAJ,CAAY,EAACQ,KAAD,EAAQC,IAAR,EAAcC,MAAd,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkDC,QAAlD,EAAZ,CAAhB;AACA,UAAMG,SAAS,MAAMD,QAAQE,IAAR,EAArB;AACAvB,QAAIS,OAAJ,CAAYa,MAAZ;AACD,GAND,CAME,OAAOZ,KAAP,EAAc;AACdV,QAAIW,IAAJ,CAASD,KAAT;AACD;AACF,CAVM;;AAYA,MAAMc,0CAAiB,OAAOzB,GAAP,EAAYC,GAAZ,KAAoB;AAChD,MAAG;AACD,UAAM,EAAEyB,EAAF,KAAS1B,IAAI2B,KAAnB;AACA,UAAML,UAAU,MAAMhB,kBAAQsB,OAAR,CAAgBF,EAAhB,CAAtB;AACAzB,QAAIS,OAAJ,CAAYY,OAAZ;AACD,GAJD,CAIE,OAAMX,KAAN,EAAY;AACZV,QAAIW,IAAJ,CAASD,KAAT;AACD;AACF,CARM","file":"student.api.js","sourcesContent":["import Student from '../../models/student';\n\nexport const getStudentList = async (req, res) => {\n  try{\n    const [students, total] = await Promise.all([Student.find(), Student.count()]);\n    const options = {total};\n    res.success(students, options);\n  } catch( error ){\n    res.fail(error);\n  }\n};\n\nexport const createStudent = async (req, res) => {\n  try{\n    //year-month-day\n    const {first, last, gender, birthday, email, telephone, subjects} = req.body;\n    const student = new Student({first, last, gender, birthday, email, telephone, subjects});\n    const result = await student.save();\n    res.success(result);\n  } catch( error ){\n    res.fail(error);\n  }\n};\n\nexport const getStudentById = async (req, res) => {\n  try{\n    const { id } = req.query;\n    const student = await Student.findOne(id);\n    res.success(student);\n  } catch(error){\n    res.fail(error);\n  }\n};\n"]}
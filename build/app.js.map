{"version":3,"sources":["../src/app.js"],"names":["env","config","mongoose","connect","process","CONNECT","mongoDBOptions","err","console","log","app","express","use","req","res","next","fail","message","code","status","json","success","data","options","parser","urlencoded","extended","ENDPOINT","studentRoute","teacherRoute"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEAA,iBAAIC,MAAJ;;AAEAC,mBAASC,OAAT,CAAiBC,QAAQJ,GAAR,CAAYK,OAA7B,EAAsCC,wBAAtC,EAAuDC,GAAD,IAAS;AAC7DA,QAAMC,QAAQC,GAAR,CAAYF,GAAZ,CAAN,GAAyBC,QAAQC,GAAR,CAAa,mBAAb,CAAzB;AACD,CAFD;;AAIA,MAAMC,MAAM,IAAIC,iBAAJ,EAAZ;;AAEAD,IAAIE,GAAJ,CAAQ,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1B;AACAD,MAAIE,IAAJ,GAAW,CAACC,OAAD,EAAUC,OAAO,GAAjB,KAAyB;AAClCV,YAAQC,GAAR,CAAYQ,OAAZ;AACA,WAAOH,IAAIK,MAAJ,CAAWD,IAAX,EAAiBE,IAAjB,CAAsB,EAACH,OAAD,EAAtB,CAAP;AACD,GAHD;AAIA;AACAH,MAAIO,OAAJ,GAAc,CAACC,IAAD,EAAOC,OAAP,EAAgBL,OAAO,GAAvB,KAA+B;AAC3CI,WAAO,OAAOA,IAAP,KAAgB,QAAhB,GAA2B,EAACA,IAAD,EAAOC,OAAP,EAA3B,GAA4C,EAACN,SAASK,IAAV,EAAnD;AACA,WAAOR,IAAIK,MAAJ,CAAWD,IAAX,EAAiBE,IAAjB,CAAsBE,IAAtB,CAAP;AACD,GAHD;AAIAP;AACD,CAZD;;AAcAL,IAAIE,GAAJ,CAAQ,sBAAQ,KAAR,CAAR;AACAF,IAAIE,GAAJ,CAAQY,qBAAOJ,IAAP,EAAR;AACAV,IAAIE,GAAJ,CAAQY,qBAAOC,UAAP,CAAkB,EAAEC,UAAU,KAAZ,EAAlB,CAAR;;AAEAhB,IAAIE,GAAJ,CAAQe,kBAAR,EAAkBC,iBAAlB;AACAlB,IAAIE,GAAJ,CAAQe,kBAAR,EAAkBE,iBAAlB;;kBAEenB,G","file":"app.js","sourcesContent":["import parser from 'body-parser';\nimport env from 'dotenv';\nimport express from 'express';\nimport mongoose from 'mongoose';\nimport logger from 'morgan';\nimport studentRoute from './api/student/student.route';\nimport teacherRoute from './api/teacher/teacher.route';\nimport { ENDPOINT, mongoDBOptions } from './common/constant';\n\nenv.config();\n\nmongoose.connect(process.env.CONNECT, mongoDBOptions, (err) => {\n  err ? console.log(err) : console.log(`MongoDB Connected`);\n});\n\nconst app = new express();\n\napp.use((req, res, next) => {\n  //response fail\n  res.fail = (message, code = 400) => {\n    console.log(message);\n    return res.status(code).json({message});\n  };\n  //response success\n  res.success = (data, options, code = 200) => {\n    data = typeof data === 'object' ? {data, options}: {message: data};\n    return res.status(code).json(data);\n  };\n  next();\n});\n\napp.use(logger(`dev`));\napp.use(parser.json());\napp.use(parser.urlencoded({ extended: false}));\n\napp.use(ENDPOINT, studentRoute);\napp.use(ENDPOINT, teacherRoute);\n\nexport default app;\n"]}